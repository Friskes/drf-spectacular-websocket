# For more information see: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI

# Build on every branch push, tag push, and pull request change
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  test:
    name: Test (💻 ${{ matrix.platform }}, 🐍 ${{ matrix.python-version }}, 🤠 ${{ matrix.django-version }})
    strategy:
      fail-fast: false
      # max-parallel: 5
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        django-version: ['Django>=3.2,<3.3', 'Django>=4.0,<4.1', 'Django>=4.1,<4.2', 'Django>=4.2,<4.3']
        platform: [
          ubuntu-latest,
          # macos-latest,
          # windows-latest
        ]

    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Install dependencies with optional
      run: |
        python -m pip install "${{ matrix.django-version }}"
        python -m pip install .[ci]

    - name: Run lint
      run: |
        python -m ruff check --fix

    - name: Run format
      run: |
        python -m ruff format

    - name: Run pytest
      run: |
        python -m pytest

  build:
    name: Build distribution 📦
    needs:
      - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user

    - name: Build a binary wheel and a source tarball
      run: python3 -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI

    # only publish to PyPI on release with tag by repo owner
    if: github.repository_owner == 'Friskes' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/drf-spectacular-websocket

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI

    if: github.repository_owner == 'Friskes' && github.event_name == 'push'

    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/drf-spectacular-websocket

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
